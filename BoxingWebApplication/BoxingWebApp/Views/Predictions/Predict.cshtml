@using Boxing.Contracts.Resources

@model BoxingWebApp.ViewModels.PredictionsDetailsViewModel
@{
    if (!AuthorizeExtensions.IsAuthenticated())
    {
        Response.RedirectToRoute("~/Logins/Login?error=unauthorized");
    }

    var boxers = ViewData["Boxers"] as SelectList;
    var match = ViewData["Match"] as BoxingWebApp.ViewModels.MatchesListItem;

    if (ViewData["Boxers1"] != null)
    {
        boxers = ViewData["BoxersSelected"] as SelectList;
    }
}
<h2 class="gridHeader">@ViewBag.Title</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, htmlAttributes: new { @class = "boxingForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="pageSubHeader">
            @(match.Boxer1 != null ? match.Boxer1.Name : string.Empty) vs @(match.Boxer2 != null ? match.Boxer2.Name : string.Empty), @match.Address
        </h4>

        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.MatchId)

        <div class="form-group">
            @Html.LabelFor(model => model.PredictedBoxerId, htmlAttributes: new { @class = "control-label col-md-2 boxingLabel formLabel" })
            @if (boxers != null)
            {

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.DropDownListFor(
                model => model.PredictedBoxerId,
                boxers,
                "-- Select --",
                new { @class = "boxingDropDownList" }
           )
            }
            else
            {
                <text>You must first add boxers</text>
            }
            @Html.ValidationMessageFor(x => x.PredictedBoxerId, "", new { @class = "text-danger formValidationMessage" })
        </div>

        <div class="formActionsDiv">
            <input type="submit" value="Save" class="boxingButton" id="save-button" />
            @Html.ActionLink(BoxingResources.Cancel, "Index", "Matches", null, new { @class = "boxingButton" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
