@using Boxing.Contracts.Resources

@model BoxingWebApp.ViewModels.MatchesListViewModel
@{
    if (!AuthorizeExtensions.IsAuthenticated())
    {
        throw new UnauthorizedAccessException();
    }

    var userIsAdmin = AuthorizeExtensions.CurrentUserIsAdmin();

    var predictions = ViewData["Predictions"] as List<BoxingWebApp.ViewModels.PredictionsListItem>;
    if (predictions == null)
    {
        predictions = new List<BoxingWebApp.ViewModels.PredictionsListItem>();
    }

    ViewBag.Title = "Index";

    var page = (int?)ViewData["Page"] != null ? ((int?)ViewData["Page"] - 1) : 0;
    var pageSize = (int?)ViewData["PageSize"] ?? 10;
}
<h2 class="gridHeader">@BoxingResources.Matches</h2>


<table class="gridTable">
    <tr>
        <th colspan="5">
            @BoxingResources.MatchesInfo
        </th>
    </tr>
    <tr class="commandRow">
        <td colspan="5">
            @Html.MainToolbar(searchable: true, searchString: ViewData["SearchString"] as string)
        </td>
    </tr>
    <tr>
        <td class="headerColumn">
            @BoxingResources.Match
        </td>
        <td class="headerColumn">
            @BoxingResources.Address
        </td>
        <td class="headerColumn">
            @BoxingResources.Time
        </td>
        <td class="headerColumn">
            @BoxingResources.Description
        </td>
        @if (!userIsAdmin)
        {
            <td class="headerColumn">
                Predict
            </td>
        }
        else
        {
            <td class="headerColumn">
                @BoxingResources.Actions
            </td>
        }
    </tr>
    @if (Model.Items != null)
    {
        var matches = Model.Items.OrderBy(m => m.Time);
        foreach (var item in matches)
        {


            string winner = null;
            if (item.WinnerId != null)
            {
                if (item.WinnerId == item.Boxer1Id)
                {
                    winner = item.Boxer1.Name;
                }
                else
                {
                    winner = item.Boxer2.Name;
                }
            }

            <tr class="displayRow">
                <td class="displayColumn">
                    <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Boxer1.Name) </span> vs <span style="font-weight:bold;">@Html.DisplayFor(modelItem => item.Boxer2.Name)</span>
                </td>
                <td class="displayColumn">
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td class="displayColumn">
                    @item.Time.ToString("dd/MM/yyyy, HH:mm")
                </td>
                <td class="displayColumn">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                @if (!userIsAdmin)
                {
                    var prediction = predictions.FirstOrDefault(p => p.MatchId == item.Id);
                    var text = "Predict";
                    if (prediction != null)
                    {
                        var boxer = item.Boxer1;
                        if (prediction.PredictedBoxerId == item.Boxer2Id)
                        {
                            boxer = item.Boxer2;
                        }
                        text = "Predicted: " + boxer.Name;
                    }

                    <td class="displayColumn">
                        @if (winner == null)
                        {
                            @Html.ActionLink(text, "Predict",
                                             controllerName: "Predictions",
                                             routeValues: new { parentId = item.Id },
                                             htmlAttributes: null)
                        }
                        else
                        {
                            <text>@text<br />Winner: @winner</text>
                        }
                    </td>
                }
                else
                {
                    <td class="actionsColumn">
                        @if ((item.Time - DateTime.MaxValue).Days == 0) // Then it's cancelled
                        {
                            <text><span style="font-weight:bold;color:#800;">Cancelled</span></text>
                        }
                        else if (item.WinnerId != null) // Then it's finished
                        {
                            <text><span style="font-weight:bold;color:#080;">Finished. Winner: @winner</span></text>
                        }
                        else
                        {

                            @Html.ActionLink("Finish", "Finish", new
                       {
                           id = item.Id
                       })
                            <br />
                            @Html.ActionLink(BoxingResources.Edit, "Edit", new
                       {
                           id = item.Id
                       })
                            <br />
                            @Html.ActionLink(BoxingResources.Delete, "Delete", new
                       {
                           id = item.Id
                       }) <br />
                            <a onclick="cancelMatchClicked(@item.Id);">Cancel</a>
                        }
                    </td>
                }
            </tr>
        }
    }
    else
    {
        <tr>
            <td class="noObjectsRow" colspan="2">
                @BoxingResources.NoMatchesEntered
            </td>
        </tr>
    }
    <tr class="pagerTr">
        <td class="pagerTd" colspan="2">
            @Html.Pager("matches", (int?)ViewData["Page"], (int?)ViewData["PageSize"], search: (string)ViewData["SearchString"])
        </td>
    </tr>
</table>

<script type="text/javascript">
    function cancelMatchClicked(matchId) {
        debugger;
        var oldUrl = window.location.href;
        var newUrl = "@Url.Action("Cancel", "Matches")/" + matchId
        if (confirm("Are you sure you want to cancel this match? You won't be able to undo the changes.")) {
            $.ajax({
                type: "POST",
                url: newUrl,
                success: function () {
                    window.location.replace(oldUrl);
                },
            });
        }
    }
</script>